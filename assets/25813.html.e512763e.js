import{h as n}from"./app.4ca8afde.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="promise-\u6709\u54EA\u4E09\u79CD\u72B6\u6001-\u5982\u4F55\u53D8\u5316" tabindex="-1"><a class="header-anchor" href="#promise-\u6709\u54EA\u4E09\u79CD\u72B6\u6001-\u5982\u4F55\u53D8\u5316" aria-hidden="true">#</a> Promise \u6709\u54EA\u4E09\u79CD\u72B6\u6001\uFF1F\u5982\u4F55\u53D8\u5316\uFF1F</h1><p>\u4E09\u79CD\u72B6\u6001\uFF1Apending resolved rejected</p><p>\u72B6\u6001\u7684\u53D8\u5316\uFF1Apending \u2014&gt; resolved \u6216 pending \u2014&gt; rejected\uFF0C\u4EE3\u7801\u6F14\u793A\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1&#39;</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span> <span class="token comment">// p1 Promise {&lt;pending&gt;}</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E00\u5F00\u59CB\u6253\u5370\u65F6\u662F pending\uFF0C\u6700\u7EC8\u662F resolved \u72B6\u6001</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span> <span class="token comment">// p2 Promise {&lt;pending&gt;}</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2-setTimeout&#39;</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// p2-setTimeout Promise {&lt;resolved&gt;: undefined}</span>
<span class="token keyword">const</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E00\u5F00\u59CB\u6253\u5370\u65F6\u662F pending\uFF0C\u6700\u7EC8\u662F rejected \u72B6\u6001</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p3&#39;</span><span class="token punctuation">,</span> p3<span class="token punctuation">)</span> <span class="token comment">// p3 Promise {&lt;pending&gt;}</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p3-setTimeout&#39;</span><span class="token punctuation">,</span> p3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// p3-setTimeout Promise {&lt;rejected&gt;: undefined}</span>
</code></pre></div><p>\u72B6\u6001\u7684\u8868\u73B0</p><ul><li>pending \u72B6\u6001\uFF0C\u4E0D\u4F1A\u89E6\u53D1 then \u548C catch</li><li>resolved \u72B6\u6001\uFF0C\u4F1A\u89E6\u53D1\u540E\u7EED\u7684 then \u56DE\u8C03\u51FD\u6570</li><li>rejected \u72B6\u6001\uFF0C\u4F1A\u89E6\u53D1\u540E\u7EED\u7684 catch \u56DE\u8C03\u51FD\u6570\uFF0C\u4EE3\u7801\u6F14\u793A\uFF1A</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1&#39;</span><span class="token punctuation">,</span>p1<span class="token punctuation">)</span> <span class="token comment">// p1 Promise {&lt;resolved&gt;: 100}</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data1&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span> <span class="token comment">// data1 100</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;err1&#39;</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u4F1A\u89E6\u53D1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">,</span>p2<span class="token punctuation">)</span> <span class="token comment">//p2 Promise {&lt;rejected&gt;: &quot;err&quot;}</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data2&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u4F1A\u89E6\u53D1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;err2&#39;</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span> <span class="token comment">// err2 err</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>then \u548C catch \u5982\u4F55\u5F71\u54CD\u72B6\u6001\u7684\u53D8\u5316</p><ul><li>then \u6B63\u5E38\u8FD4\u56DE resolved\uFF0C\u91CC\u9762\u6709\u62A5\u9519\u5219\u8FD4\u56DE rejected</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">100</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E00\u5F00\u59CB\u6253\u5370\u65F6\u662F pending\uFF0C\u6700\u7EC8\u662F resolved \u72B6\u6001\uFF0C\u4F1A\u89E6\u53D1\u540E\u7EED then \u7684\u56DE\u8C03</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1&#39;</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span> <span class="token comment">//123</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E00\u5F00\u59CB\u6253\u5370\u65F6\u662F pending\uFF0C\u6700\u7EC8\u662F rejected \u72B6\u6001\uFF0C\u4F1A\u89E6\u53D1\u540E\u7EED catch \u7684\u56DE\u8C03</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u4F1A\u89E6\u53D1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;err2&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err2 Error: err</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>catch \u6B63\u5E38\u8FD4\u56DE resolved\uFF0C\u91CC\u9762\u6709\u62A5\u9519\u5219\u8FD4\u56DE rejected</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p3 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;my error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E00\u5F00\u59CB\u6253\u5370\u65F6\u662F pending\uFF0C\u6700\u7EC8\u662F resolved \u72B6\u6001\uFF0C\u4F1A\u89E6\u53D1\u540E\u7EED then \u7684\u56DE\u8C03</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p3&#39;</span><span class="token punctuation">,</span>p3<span class="token punctuation">)</span>
p3<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;333&#39;</span><span class="token punctuation">)</span> <span class="token comment">//333</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p4 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;my error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;catch err&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E00\u5F00\u59CB\u6253\u5370\u65F6\u662F pending\uFF0C\u6700\u7EC8\u662F rejected \u72B6\u6001\uFF0C\u4F1A\u89E6\u53D1\u540E\u7EED catch \u7684\u56DE\u8C03</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p4&#39;</span><span class="token punctuation">,</span>p4<span class="token punctuation">)</span>
<span class="token keyword">const</span> p5 <span class="token operator">=</span> p4<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;444&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u4F1A\u89E6\u53D1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;err4&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err4 Error: catch err</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p5&#39;</span><span class="token punctuation">,</span>p5<span class="token punctuation">)</span> <span class="token comment">// \u4E00\u5F00\u59CB\u6253\u5370\u65F6\u662F pending\uFF0C\u6700\u7EC8\u662F resolved \u72B6\u6001</span>
</code></pre></div>`,12);function t(o,c){return p}var l=s(a,[["render",t]]);export{l as default};
