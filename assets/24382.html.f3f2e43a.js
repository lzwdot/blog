import{d as p,o,c,a as n,e as t,F as e,g as s,h as u}from"./app.4ca8afde.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const k={},r=n("h1",{id:"crypto-js\u4E0Ephp\u901A\u8FC7aes\u52A0\u5BC6\u4F20\u8F93",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#crypto-js\u4E0Ephp\u901A\u8FC7aes\u52A0\u5BC6\u4F20\u8F93","aria-hidden":"true"},"#"),s(" crypto-js\u4E0Ephp\u901A\u8FC7aes\u52A0\u5BC6\u4F20\u8F93")],-1),i=n("p",null,"CryptoJS (crypto.js) \u4E3A JavaScript \u63D0\u4F9B\u4E86\u5404\u79CD\u5404\u6837\u7684\u52A0\u5BC6\u7B97\u6CD5\u3002\u76EE\u524D\u5DF2\u652F\u6301\u7684\u7B97\u6CD5\u5305\u62EC\uFF1A",-1),d=n("ul",null,[n("li",null,"MD5"),n("li",null,"SHA-1"),n("li",null,"SHA-256"),n("li",null,[s("AES"),n("br"),s(" ....")])],-1),y=n("p",null,"\u8FD9\u91CC\u6211\u4EEC\u6F14\u793Aaes\u5BF9\u79F0\u52A0\u5BC6\u6570\u636E\u4F20\u8F93\uFF0C\u4E0B\u9762\u5217\u51FAcrypto-js\u7684\u51E0\u4E2A\u91CD\u8981\u94FE\u63A5",-1),_=s("github\u9879\u76EE\u5730\u5740"),f=n("br",null,null,-1),m={href:"https://github.com/brix/crypto-js",target:"_blank",rel:"noopener noreferrer"},g=s("https://github.com/brix/crypto-js"),h=n("br",null,null,-1),S=s(" \u6587\u6863"),b=n("br",null,null,-1),w={href:"https://github.com/brix/crypto-js/blob/master/docs/QuickStartGuide.wiki",target:"_blank",rel:"noopener noreferrer"},$=s("https://github.com/brix/crypto-js/blob/master/docs/QuickStartGuide.wiki"),j=n("br",null,null,-1),C=s(" \u6E90\u7801\u5730\u5740"),v=n("br",null,null,-1),q={href:"https://github.com/brix/crypto-js/releases",target:"_blank",rel:"noopener noreferrer"},J=s("https://github.com/brix/crypto-js/releases"),x=u(`<p><strong>js\u524D\u7AEF\u6F14\u793A\u4EE3\u7801\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;./crypto-js-3.1.9-1/crypto-js.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span><span class="token operator">&gt;</span>
    <span class="token doc-comment comment">/**\u52A0\u5BC6
    *
    * <span class="token keyword">@param</span> <span class="token parameter">data</span>
    * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
    */</span>
    <span class="token keyword">function</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        text <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> key <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;1234567887654321&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4E3A\u4E86\u907F\u514D\u8865\u4F4D\uFF0C\u76F4\u63A5\u752816\u4F4D\u7684\u79D8\u94A5</span>
        <span class="token keyword">let</span> iv <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;1234567887654321&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//16\u4F4D\u521D\u59CB\u5411\u91CF</span>
        <span class="token keyword">let</span> encrypted <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">iv</span><span class="token operator">:</span> iv<span class="token punctuation">,</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>ZeroPadding
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**\u89E3\u5BC6
    *
    * <span class="token keyword">@param</span> <span class="token parameter">data</span>
    * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
    */</span>
    <span class="token keyword">function</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> encrypted <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> key <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;1234567887654321&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4E3A\u4E86\u907F\u514D\u8865\u4F4D\uFF0C\u76F4\u63A5\u752816\u4F4D\u7684\u79D8\u94A5</span>
        <span class="token keyword">let</span> iv <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;1234567887654321&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//16\u4F4D\u521D\u59CB\u5411\u91CF</span>
        <span class="token keyword">let</span> decrypted <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">iv</span><span class="token operator">:</span> iv<span class="token punctuation">,</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>ZeroPadding
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>decrypted<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;pwd&quot;</span><span class="token operator">:</span> <span class="token string">&quot;passwd&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> encrypt_data <span class="token operator">=</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> decrypt_data <span class="token operator">=</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>encrypt_data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decrypt_data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div><p><strong>php\u540E\u7AEF\u6F14\u793A\u4EE3\u7801\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\u52A0\u5BC6
* <span class="token keyword">@param</span> <span class="token parameter">$data</span>
* <span class="token keyword">@return</span> string
*/</span>
<span class="token keyword">function</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token parameter">$data</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    $key <span class="token operator">=</span> <span class="token string">&quot;1234567887654321&quot;</span><span class="token punctuation">;</span><span class="token comment">//\u79D8\u94A5\u5FC5\u987B\u4E3A\uFF1A8/16/32\u4F4D</span>
    $iv <span class="token operator">=</span> <span class="token string">&quot;1234567887654321&quot;</span><span class="token punctuation">;</span>
    $base64_str <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span>$data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    $encrypted <span class="token operator">=</span> <span class="token function">openssl_encrypt</span><span class="token punctuation">(</span>$base64_str<span class="token punctuation">,</span> <span class="token string">&quot;aes-128-cbc&quot;</span><span class="token punctuation">,</span> $key<span class="token punctuation">,</span> <span class="token constant">OPENSSL_ZERO_PADDING</span><span class="token punctuation">,</span> $iv<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span>$encrypted<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**\u89E3\u5BC6
* <span class="token keyword">@param</span> <span class="token parameter">$data</span>
* <span class="token keyword">@return</span> mixed
*/</span>
<span class="token keyword">function</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token parameter">$data</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    $encrypted <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    $key <span class="token operator">=</span> <span class="token string">&quot;1234567887654321&quot;</span><span class="token punctuation">;</span><span class="token comment">//\u79D8\u94A5\u5FC5\u987B\u4E3A\uFF1A8/16/32\u4F4D</span>
    $iv <span class="token operator">=</span> <span class="token string">&quot;1234567887654321&quot;</span><span class="token punctuation">;</span>
    $decrypted <span class="token operator">=</span> <span class="token function">openssl_decrypt</span><span class="token punctuation">(</span>$encrypted<span class="token punctuation">,</span> <span class="token string">&#39;aes-128-cbc&#39;</span><span class="token punctuation">,</span> $key<span class="token punctuation">,</span> <span class="token constant">OPENSSL_ZERO_PADDING</span><span class="token punctuation">,</span> $iv<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span>$decrypted<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
$data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;username&#39;</span><span class="token operator">=&gt;</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;pwd&#39;</span><span class="token operator">=&gt;</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
$encrypt<span class="token operator">=</span><span class="token function">encrypt</span><span class="token punctuation">(</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
$str<span class="token operator">=</span><span class="token function">decrypt</span><span class="token punctuation">(</span>$encrypt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span>$str<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,4),E=s("\u53C2\u8003\uFF1A"),B={href:"https://www.jianshu.com/p/5619d68bc2d1",target:"_blank",rel:"noopener noreferrer"},N=s("https://www.jianshu.com/p/5619d68bc2d1");function U(A,P){const a=p("ExternalLinkIcon");return o(),c(e,null,[r,i,d,y,n("p",null,[_,f,n("a",m,[g,t(a)]),h,S,b,n("a",w,[$,t(a)]),j,C,v,n("a",q,[J,t(a)])]),x,n("p",null,[E,n("a",B,[N,t(a)])])],64)}var G=l(k,[["render",U]]);export{G as default};
