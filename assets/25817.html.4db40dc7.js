import{h as n}from"./app.4ca8afde.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},t=n(`<h1 id="async-await-\u662F\u8BED\u6CD5\u7CD6-\u5F02\u6B65\u7684\u672C\u8D28\u8FD8\u662F\u56DE\u8C03\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#async-await-\u662F\u8BED\u6CD5\u7CD6-\u5F02\u6B65\u7684\u672C\u8D28\u8FD8\u662F\u56DE\u8C03\u51FD\u6570" aria-hidden="true">#</a> async/await \u662F\u8BED\u6CD5\u7CD6\uFF0C\u5F02\u6B65\u7684\u672C\u8D28\u8FD8\u662F\u56DE\u8C03\u51FD\u6570</h1><p>async/await \u8BED\u6CD5</p><ul><li>\u5F02\u6B65\u56DE\u8C03\u5BB9\u6613\u4EA7\u751F callback hell\uFF08\u56DE\u8C03\u5730\u72F1\uFF09</li><li>Promise then catch \u94FE\u5F0F\u8C03\u7528\uFF0C\u4F46\u4E5F\u662F\u57FA\u4E8E\u56DE\u8C03\u51FD\u6570</li><li>async/await \u662F\u540C\u6B65\u8BED\u6CD5\uFF0C\u5F7B\u5E95\u6D88\u706D\u56DE\u8C03\u51FD\u6570\uFF0C\u4EE3\u7801\u6F14\u793A\uFF1A</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">//\u52A0\u8F7D\u56FE\u7247</span>
<span class="token keyword">function</span> <span class="token function">loadImg</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span>
        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        img<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u56FE\u7247\u52A0\u8F7D\u5931\u8D25 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>src<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> src
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> p
<span class="token punctuation">}</span>
<span class="token keyword">const</span> src1 <span class="token operator">=</span> <span class="token string">&#39;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&#39;</span>
<span class="token keyword">const</span> src2 <span class="token operator">=</span> <span class="token string">&#39;https://box.bdimg.com/static/fisp_static/common/img/searchbox/logo_news_276_88_1f9876a.png&#39;</span>
<span class="token comment">// !\u7528\u4E8E\u89E3\u51B3\u62A5\u9519 Uncaught TypeError: &quot;https...&quot; is not a function is not a function</span>
<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u540C\u6B65\u7684\u5199\u6CD5</span>
    <span class="token keyword">const</span> img1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadImg1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//\u4E5F\u53EF\u4EE5\u76F4\u63A5\u7528 loadImg(src1)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>img1<span class="token punctuation">.</span>width<span class="token punctuation">,</span>img1<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
    <span class="token keyword">const</span> img2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadImg2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u4E5F\u53EF\u4EE5\u76F4\u63A5\u7528 loadImg(src2)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>img2<span class="token punctuation">.</span>width<span class="token punctuation">,</span>img2<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">loadImg1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> img1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadImg</span><span class="token punctuation">(</span>src1<span class="token punctuation">)</span>
    <span class="token keyword">return</span> img1
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">loadImg2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> img2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadImg</span><span class="token punctuation">(</span>src2<span class="token punctuation">)</span>
    <span class="token keyword">return</span> img2
<span class="token punctuation">}</span>
</code></pre></div><p>async/await \u548C Promise \u7684\u5173\u7CFB</p><ul><li>async/await \u662F\u6D88\u706D\u5F02\u6B65\u56DE\u8C03\u7684\u7EC8\u6781\u6B66\u5668</li><li>\u4F46\u548C Promise \u5E76\u4E0D\u4E92\u65A5\uFF0C\u53CD\u800C\u4E24\u8005\u76F8\u8F85\u76F8\u6210</li><li>\u6267\u884C async \u51FD\u6570\uFF0C\u8FD4\u56DE\u7684\u662F Promise \u5BF9\u8C61</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">100</span>
    <span class="token comment">// return Promise.resolve(200)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6267\u884C async \u51FD\u6570\uFF0C\u8FD4\u56DE Promise \u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res1&#39;</span><span class="token punctuation">,</span>res1<span class="token punctuation">)</span> <span class="token comment">// res1 Promise</span>
res1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data1&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span> <span class="token comment">// data1 100</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>await \u76F8\u5F53\u4E8E Promise \u7684 then</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">100</span>
    <span class="token comment">// return Promise.resolve(200)</span>
<span class="token punctuation">}</span>
<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> p1 <span class="token comment">// await \u76F8\u5F53\u4E8E Promise then</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span> <span class="token comment">// data 300</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> data1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token number">400</span> <span class="token comment">// \u76F4\u63A5\u8FD4\u56DE 400</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span>data1<span class="token punctuation">)</span> <span class="token comment">// data 400</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> data2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// await \u76F8\u5F53\u4E8E Promise.resolve(100)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span>data2<span class="token punctuation">)</span> <span class="token comment">// data 100</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>try...catch \u53EF\u6355\u83B7\u5F02\u5E38\uFF0C\u4EE3\u66FF\u4E86 Promise \u7684 catch</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> p4 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span> <span class="token comment">// rejected\u72B6\u6001</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res4 <span class="token operator">=</span> <span class="token keyword">await</span> p4
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res4&#39;</span><span class="token punctuation">,</span> res4<span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u6267\u884C</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;err4&#39;</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span> <span class="token comment">//err4 err try\u2026catch \u76F8\u5F53\u4E8E Promise catch</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6CA1\u6709 try\u2026catch \u65E0\u6CD5\u6355\u83B7\u9519\u8BEF</span>
<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> p5 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;err1&#39;</span><span class="token punctuation">)</span> <span class="token comment">// rejected\u72B6\u6001</span>
    <span class="token keyword">const</span> res5 <span class="token operator">=</span> <span class="token keyword">await</span> p5 <span class="token comment">// await -&gt; then\uFF0C\u4E0B\u9762\u4E0D\u4F1A\u6267\u884C</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res5&#39;</span><span class="token punctuation">,</span>res5<span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u6267\u884C</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5F02\u6B65\u7684\u672C\u8D28</p><ul><li>async/await \u662F\u6D88\u706D\u5F02\u6B65\u56DE\u8C03\u7684\u7EC8\u6781\u6B66\u5668</li><li>JS \u8FD8\u662F\u5355\u7EBF\u7A0B\uFF0C\u8FD8\u5F97\u662F\u6709\u5F02\u6B65\uFF0C\u8FD8\u5F97\u662F\u57FA\u4E8E event loop</li><li>async/await \u53EA\u662F\u4E00\u4E2A\u8BED\u6CD5\u7CD6\uFF0C\u4EE3\u7801\u6F14\u793A\uFF1A</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 start&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 2</span>
    <span class="token keyword">await</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//undefined</span>
    <span class="token comment">// await \u7684\u540E\u9762\uFF0C\u90FD\u53EF\u4EE5\u770B\u505A\u662F callback \u91CC\u7684\u5185\u5BB9\uFF0C\u5373\u5F02\u6B65</span>
    <span class="token comment">// \u7C7B\u4F3C event loop\uFF0CsetTimeout(function(){ console.log(&#39;async1 end&#39;)})</span>
    <span class="token comment">// \u6216 Promise.resolve().then(()=&gt;{console.log(&#39;async1 end&#39;)})</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 end&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 5</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async2&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 3</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script start&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 1</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script end&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 4</span>
<span class="token comment">// \u540C\u6B65\u4EE3\u7801\u5DF2\u7ECF\u6267\u884C\u5B8C\uFF08event loop\uFF09</span>
<span class="token comment">// script start</span>
<span class="token comment">// async1 start</span>
<span class="token comment">// async2</span>
<span class="token comment">// script end</span>
<span class="token comment">// async1 end</span>
</code></pre></div><p>\u518D\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 start&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 2</span>
    <span class="token keyword">await</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4E0B\u9762\u90FD\u662F\u5F02\u6B65\u56DE\u8C03 callback \u7684\u5185\u5BB9</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 end&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 5</span>
    <span class="token keyword">await</span> <span class="token function">async3</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4E0B\u9762\u90FD\u662F\u5F02\u6B65\u56DE\u8C03 callback \u7684\u5185\u5BB9</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 end 2&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 7</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async2&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 3</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async3&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 6</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script start&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 1</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script end&#39;</span><span class="token punctuation">)</span> <span class="token comment">// step 4</span>
<span class="token comment">// \u540C\u6B65\u4EE3\u7801\u5DF2\u7ECF\u6267\u884C\u5B8C\uFF08event loop\uFF09</span>
<span class="token comment">// script start</span>
<span class="token comment">// async1 start</span>
<span class="token comment">// async2</span>
<span class="token comment">// script end</span>
<span class="token comment">// async1 end</span>
<span class="token comment">// async3</span>
<span class="token comment">// async1 end 2</span>
</code></pre></div><p>\u8865\u5145 for ... of \u5F02\u6B65\u7684\u4F7F\u7528</p><ul><li>for ... in \uFF08\u4EE5\u53CA forEach for \uFF09\u662F\u5E38\u89C4\u7684\u540C\u6B65\u904D\u5386</li><li>for ... of \u5E38\u7528\u4E8E\u5F02\u6B65\u7684\u904D\u5386</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">muti</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>num <span class="token operator">*</span> num<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
nums<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// 1\u79D2\u540E\u540C\u6B65\u6267\u884C</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">muti</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">// \u76F8\u5F53\u4E8E Promise \u7684 then</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// 1 4 9</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 1\u79D2\u6267\u884C\u4E00\u4E2A</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">muti</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">// \u76F8\u5F53\u4E8E Promise \u7684 then</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// 1 4 9</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div>`,19);function p(o,c){return t}var u=s(a,[["render",p]]);export{u as default};
