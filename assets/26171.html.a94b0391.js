import{d as o,o as e,c,a as n,e as t,F as u,h as p,g as s}from"./app.4ca8afde.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const k={},i=p('<h1 id="\u624B\u5199\u4E00\u4E2A\u7B80\u6613\u7684-ajax" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199\u4E00\u4E2A\u7B80\u6613\u7684-ajax" aria-hidden="true">#</a> \u624B\u5199\u4E00\u4E2A\u7B80\u6613\u7684 ajax</h1><p>\u5148\u89E3\u91CA xhr.readyState</p><ul><li>0-\uFF08\u672A\u521D\u59CB\u5316\uFF09\u8FD8\u6CA1\u6709\u8C03\u7528 send() \u65B9\u6CD5</li><li>1-\uFF08\u8F7D\u5165\uFF09\u5DF2\u8C03\u7528 send() \u65B9\u6CD5\uFF0C\u6B63\u5728\u53D1\u9001\u8BF7\u6C42</li><li>2-\uFF08\u8F7D\u5165\u5B8C\u6210\uFF09send() \u65B9\u6CD5\u6267\u884C\u5B8C\u6210\uFF0C\u5DF2\u7ECF\u63A5\u6536\u5230\u5168\u90E8\u54CD\u5E94\u5185\u5BB9</li><li>3-\uFF08\u4EA4\u4E92\uFF09\u6B63\u5728\u89E3\u6790\u54CD\u5E94\u5185\u5BB9</li><li>4-\uFF08\u5B8C\u6210\uFF09\u54CD\u5E94\u5185\u5BB9\u89E3\u6790\u5B8C\u6210\uFF0C\u53EF\u4EE5\u5728\u5BA2\u6237\u7AEF\u8C03\u7528</li></ul><p>\u518D\u89E3\u91CA xhr.status</p><ul><li>2xx- \u8868\u793A\u6210\u529F\u5904\u7406\u8BF7\u6C42\uFF0C\u5982 200</li><li>3xx- \u9700\u8981\u91CD\u5B9A\u5411\uFF0C\u6D4F\u89C8\u5668\u76F4\u63A5\u8DF3\u8F6C\uFF0C\u5982 301 302 304</li><li>4xx- \u5BA2\u6237\u7AEF\u8BF7\u6C42\u9519\u8BEF\uFF0C\u5982 404 403</li><li>5xx- \u670D\u52A1\u5668\u7AEF\u9519\u8BEF</li></ul>',5),r=s("\u5148\u51C6\u5907\u4E00\u4E2A\u6570\u636E\uFF1A"),d={href:"http://test.com//test/test.json",target:"_blank",rel:"noopener noreferrer"},h=s("http://test.com//test/test.json"),x=p(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>get \u8BF7\u6C42\u6F14\u793A\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// get\u8BF7\u6C42\uFF0Ctrue \u8868\u793A\u5F02\u6B65</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/test/test.json&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment">//200 {name: &quot;zhangsan&quot;}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token string">&#39;\u5176\u4ED6\u60C5\u51B5&#39;</span><span class="token punctuation">)</span>
            <span class="token comment">// 404 &quot;\u5176\u4ED6\u60C5\u51B5&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre></div><p>post \u8BF7\u6C42\u6F14\u793A\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// post\u8BF7\u6C42\uFF0C\u65E0\u6CD5\u6F14\u793A\uFF0Ctrue \u8868\u793A\u5F02\u6B65</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment">// \u767B\u5F55\u6210\u529F\u63D0\u793A</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token string">&#39;\u5176\u4ED6\u60C5\u51B5&#39;</span><span class="token punctuation">)</span>
            <span class="token comment">// 404 &quot;\u5176\u4ED6\u60C5\u51B5&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6CE8\u610F\uFF0C\u9700\u8981\u628A json \u8F6C\u5B57\u7B26\u4E32</span>
xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>postData<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>\u624B\u5199\u4E00\u4E2A ajax \u51FD\u6570\uFF0C\u589E\u52A0 Promise \u7684\u5C01\u88C5</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">404</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;404 not found&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> p
<span class="token punctuation">}</span>
<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;/test/test.json&#39;</span>
<span class="token function">ajax</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// {name: &quot;zhangsan&quot;}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token comment">// &#39;404 not found&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5B9E\u9645\u9879\u76EE\u4E2D ajax \u7684\u5E38\u7528\u63D2\u4EF6</p>`,8),g=s("jQuery\uFF1A"),f={href:"https://www.w3school.com.cn/jquery/ajax_ajax.asp",target:"_blank",rel:"noopener noreferrer"},m=s("https://www.w3school.com.cn/jquery/ajax_ajax.asp"),_=s("Fetch \u662F\u65B0\u7684 API\uFF1A"),y={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch",target:"_blank",rel:"noopener noreferrer"},w=s("https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch"),j=s("axios\uFF1A"),v={href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"},b=s("https://github.com/axios/axios");function q(N,S){const a=o("ExternalLinkIcon");return e(),c(u,null,[i,n("p",null,[r,n("a",d,[h,t(a)])]),x,n("ul",null,[n("li",null,[g,n("a",f,[m,t(a)])]),n("li",null,[_,n("a",y,[w,t(a)])]),n("li",null,[j,n("a",v,[b,t(a)])])])],64)}var F=l(k,[["render",q]]);export{F as default};
